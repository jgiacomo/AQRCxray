% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aqrc_database_connect.R
\name{xrayDBconnect}
\alias{xrayDBconnect}
\title{Function to connect to the database}
\usage{
xrayDBconnect(network = c("IMPROVE", "CSN"), server = "production",
  config_file = "../config/config.yml")
}
\arguments{
\item{network}{Character string of the network to connect to (IMPROVE or 
CSN).}

\item{server}{Character string of the server to connect to. Typically 
something like "production", "development", and "test" (default is 
"production").}

\item{config_file}{Character string of the relative path to the config file
(default = \code{../config/config.yml})}
}
\value{
A pool connection to the database defined by the parameters.
}
\description{
This function will connect to the AQRC databases (IMPROVE or CSN) and pull 
data from multiple tables that are useful for XRF data analysis. The database
connection is done with the help of a config file which is stored in the 
../config/config.yml file. See the documentation for the \code{config} 
package for details.
}
\details{
This function will open a database connection via the \code{pool} 
  package. It uses the \code{config} package to place the connection 
  configuration into a separate file that can be read in to make it easier to
  distribute between desktop sessions and deployed server sessions (which may
  have different connection parameters). Also, because this is opening pool 
  connections to the database, it is best practice to ensure these 
  connections are closed after database operations are finished. Also, while 
  the database servers are being changed over (a new database server was 
  installed) the IMPROVE and CSN are on different servers. To connect to CSN 
  database you need to use the \code{config_test.yml} file and to connecto to
  IMPROVE you need to use the \code{config.yml} file.
}
\examples{
poolIMP <- xrayDBconnect("IMPROVE", "../config/config.yml")
poolCSN <- xrayDBconnect("CSN", "../config/config_test.yml")
# Perform some database operations with the connection.
# Once complete, close the pool connection.
pool::poolClose(poolIMP)
pool::poolClose(poolCSN)

}
